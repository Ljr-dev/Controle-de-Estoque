/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.projeto.view;

import br.com.projeto.jdbc.ConnectionFactory;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author leand
 */
public class relatorio extends javax.swing.JFrame {

    /**
     * Creates new form relatorio
     */
    public relatorio() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(120, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(171, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        Document doc = null;
        OutputStream outPutStream = null;

        try {
            doc = new Document(PageSize.A4, 20, 30, 30, 20);
            outPutStream = new FileOutputStream("Produtos.pdf");

            try {
                PdfWriter.getInstance(doc, outPutStream);
                doc.open();

                Paragraph pTitulo = new Paragraph(new Phrase(20F, "Lista de Produtos", FontFactory.getFont(FontFactory.HELVETICA, 30F)));
                pTitulo.setAlignment(Element.ALIGN_CENTER);

                doc.add(pTitulo);
                Paragraph espaco = new Paragraph(new Phrase(7F, "  ", FontFactory.getFont(FontFactory.HELVETICA, 7F)));
                espaco.setAlignment(Element.ALIGN_CENTER);

                doc.add(espaco);

                Paragraph m_data = new Paragraph(new Phrase(7F, "id", FontFactory.getFont(FontFactory.HELVETICA, 5F)));
                Paragraph m_tipo = new Paragraph(new Phrase(7F, "Descrição", FontFactory.getFont(FontFactory.HELVETICA, 5F)));
                Paragraph m_descricao = new Paragraph(new Phrase(7F, "Quantidade", FontFactory.getFont(FontFactory.HELVETICA, 5F)));
                Paragraph m_status = new Paragraph(new Phrase(7F, "Preço", FontFactory.getFont(FontFactory.HELVETICA, 5F)));
                Paragraph m_classificacao = new Paragraph(new Phrase(7F, "Subtotal", FontFactory.getFont(FontFactory.HELVETICA, 5F)));

                PdfPTable tablem = new PdfPTable(4);
                PdfPCell cella = new PdfPCell(new Paragraph(m_data));
                PdfPCell cellb = new PdfPCell(new Paragraph(m_tipo));
                PdfPCell cellc = new PdfPCell(new Paragraph(m_descricao));
                PdfPCell celld = new PdfPCell(new Paragraph(m_status));
                PdfPCell celle = new PdfPCell(new Paragraph(m_classificacao));

                cella.setHorizontalAlignment(Element.ALIGN_CENTER);
                cellb.setHorizontalAlignment(Element.ALIGN_CENTER);
                cellc.setHorizontalAlignment(Element.ALIGN_CENTER);
                celld.setHorizontalAlignment(Element.ALIGN_CENTER);
                celle.setHorizontalAlignment(Element.ALIGN_CENTER);

                tablem.addCell(cellb);
                tablem.addCell(cellc);
                tablem.addCell(celld);
                tablem.addCell(celle);

              
                doc.add(espaco);

                Connection con = new ConnectionFactory().getConnection();
                PreparedStatement ps, ps1 = null;
                ResultSet rs, rs1 = null;

                String query = "select p.descricao, i.qtd, p.preco, i.subtotal from tb_itensvendas as i "
                    + " inner join tb_produtos as p on(i.produto_id = p.id) where i.venda_id = (select max(id) as m from tb_vendas)  ";
                
                 String sql = "select v.id ,  date_format(v.data_venda,'%d/%m/%Y') as data_formatada , c.nome, v.total_venda, v.observacoes  from tb_vendas as v  "
                       + " inner join tb_clientes as c on(v.cliente_id = c.id) where v.id = (select max(id) as m from tb_vendas)";

                ps = con.prepareStatement(query);
                ps1 = con.prepareStatement(sql);
                
                 rs1 = ps1.executeQuery();
                     
                    while (rs1.next()) {
                    Paragraph id = new Paragraph(
                        rs1.getString("data_formatada"), FontFactory.getFont(FontFactory.HELVETICA, 10F));
                    Paragraph descricao = new Paragraph(
                        rs1.getString("c.nome"), FontFactory.getFont(FontFactory.HELVETICA, 8F));
                    Paragraph preco_compra = new Paragraph(
                        rs1.getString("v.total_venda"), FontFactory.getFont(FontFactory.HELVETICA, 15F));
                    Paragraph preco_venda = new Paragraph(
                        rs1.getString("v.observacoes"), FontFactory.getFont(FontFactory.HELVETICA, 5F));                
                    PdfPTable table1 = new PdfPTable(4);  
                    PdfPCell cell1 = new PdfPCell(new Paragraph(id));
                    PdfPCell cell2 = new PdfPCell(new Paragraph(descricao));
                    PdfPCell cell3 = new PdfPCell(new Paragraph(preco_venda));
                    PdfPCell cell4 = new PdfPCell(new Paragraph(preco_compra));
                    cell1.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell3.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell4.setHorizontalAlignment(Element.ALIGN_CENTER);                  
                    table1.addCell(cell1);
                    table1.addCell(cell2);
                    table1.addCell(cell3);
                    table1.addCell(cell4);
                  doc.add(table1);
                  doc.add(espaco);
                    }doc.add(tablem);
                  rs = ps.executeQuery();
                
               

                while (rs.next()) {
                    Paragraph id = new Paragraph(
                        rs.getString("p.descricao"), FontFactory.getFont(FontFactory.HELVETICA, 7F));
                    Paragraph descricao = new Paragraph(
                        rs.getString("i.qtd"), FontFactory.getFont(FontFactory.HELVETICA, 5F));
                    Paragraph preco_compra = new Paragraph(
                        rs.getString("p.preco"), FontFactory.getFont(FontFactory.HELVETICA, 5F));
                    Paragraph preco_venda = new Paragraph(
                        rs.getString("i.subtotal"), FontFactory.getFont(FontFactory.HELVETICA, 5F));                
                    PdfPTable table = new PdfPTable(4);  
                    PdfPCell cell1 = new PdfPCell(new Paragraph(id));
                    PdfPCell cell2 = new PdfPCell(new Paragraph(descricao));
                    PdfPCell cell3 = new PdfPCell(new Paragraph(preco_compra));
                    PdfPCell cell4 = new PdfPCell(new Paragraph(preco_venda));
                    cell1.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell3.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell4.setHorizontalAlignment(Element.ALIGN_CENTER);                  
                    table.addCell(cell1);
                    table.addCell(cell2);
                    table.addCell(cell3);
                    table.addCell(cell4);
                    doc.add(table);

                }
                    
                Runtime.getRuntime().exec(new String[]{"cmd.exe", "/c", "start", "Produtos.pdf"});

                doc.close();

            } catch (IOException | DocumentException | SQLException ex) {
                Logger.getLogger(FrmRelatorio.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FrmRelatorio.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
                Logger.getLogger(relatorio.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(relatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(relatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(relatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(relatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new relatorio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
