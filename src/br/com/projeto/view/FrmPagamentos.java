/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.projeto.view;

import br.com.projeto.dao.ItemVendaDAO;
import br.com.projeto.dao.ProdutosDAO;
import br.com.projeto.dao.VendasDAO;
import br.com.projeto.jdbc.ConnectionFactory;
import br.com.projeto.model.Clientes;
import br.com.projeto.model.ItemVenda;
import br.com.projeto.model.Produtos;
import br.com.projeto.model.Vendas;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Caio Duarte
 */
public class FrmPagamentos extends javax.swing.JFrame {
    int cliente_id;
    
    Clientes cliente = new Clientes();
    DefaultTableModel carrinho;

    public FrmPagamentos() {
        initComponents();

       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txttotal = new javax.swing.JTextField();
        btnfinalizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtobs = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tela de Pagamentos");

        jPanel1.setBackground(new java.awt.Color(0, 102, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Finalizar Venda");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        jLabel2.setText("Observações:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        jLabel6.setText("TOTAL:");

        txttotal.setEditable(false);
        txttotal.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N

        btnfinalizar.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        btnfinalizar.setText("Finalizar Venda");
        btnfinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnfinalizarActionPerformed(evt);
            }
        });

        txtobs.setColumns(20);
        txtobs.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        txtobs.setRows(5);
        jScrollPane1.setViewportView(txtobs);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addGap(41, 41, 41)
                            .addComponent(txttotal, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(40, 40, 40)
                            .addComponent(btnfinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(32, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txttotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(btnfinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnfinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnfinalizarActionPerformed

        double pcartao, pdinheiro, totalpago, totalvenda, troco;

      
        
       

        totalvenda = Double.parseDouble(txttotal.getText());

        //Calcularo total e o troco
       

       

        Vendas objv = new Vendas();

        //Dados do cliente (cliente_id)
        objv.setCliente(cliente);

        //Pega a data da venda
        Date agora = new Date();
        SimpleDateFormat dataEUA = new SimpleDateFormat("yyyy-MM-dd");
        String datamysql = dataEUA.format(agora);

        objv.setData_venda(datamysql);

        //Total da venda e obs
        objv.setTotal_venda(totalvenda);
        objv.setObs(txtobs.getText());

        VendasDAO dao_v = new VendasDAO();
        dao_v.cadastrarVenda(objv);

        //Retorna o id da ultima venda realizada
        objv.setId(dao_v.retornaUltimaVenda());

        //System.out.println("Id da ultima venda: " + objv.getId());
     
        // Cadastrando os produtos na tabela itemvendas
        for (int i = 0; i < carrinho.getRowCount(); i++) {

            double qtd_estoque , qtd_comprada, qtd_atualizada ;
            Produtos objp = new Produtos();
            ProdutosDAO dao_produto = new ProdutosDAO();
          
            ItemVenda item = new ItemVenda();
            item.setVenda(objv);

            objp.setId(Integer.parseInt(carrinho.getValueAt(i, 0).toString()));
            item.setProduto(objp);
            item.setQtd (Double.parseDouble(carrinho.getValueAt(i, 2).toString()));
            
            item.setSubtotal(Double.parseDouble(carrinho.getValueAt(i, 4).toString()));
                        
            //Baixa no estoque
            qtd_estoque = dao_produto.retornaEstoqueAtual(objp.getId());
            qtd_comprada = Double.parseDouble(carrinho.getValueAt(i, 2).toString());
            qtd_atualizada = qtd_estoque - qtd_comprada;
            
            dao_produto.baixaEstoque(objp.getId(),  qtd_atualizada);         

            ItemVendaDAO daoitem = new ItemVendaDAO();
            daoitem.cadastraItem(item);

         }
       /***********************************************************************/
         
        JOptionPane.showMessageDialog(null, "Venda Registrada com Sucesso!");
        
          
        Document doc = null;
        OutputStream outPutStream = null;

        try {
            doc = new Document(PageSize.A4, 20, 30, 30, 20);
            outPutStream = new FileOutputStream("Produtos.pdf");
            
            try {
                PdfWriter.getInstance(doc, outPutStream);
                doc.open();
                doc.addTitle("Orçamento");
                
            


                Paragraph pTitulo = new Paragraph(new Phrase(20F, "Orçamento", FontFactory.getFont(FontFactory.HELVETICA, 30F)));
                pTitulo.setAlignment(Element.ALIGN_CENTER);
                
                Paragraph pTitulo1 = new Paragraph(new Phrase(20F, "   Rocha System  Rua Onofre Alves 440, Jardim Paulista Monte Mor    "
                                                                 + "Contato (19)974080052 ", FontFactory.getFont(FontFactory.HELVETICA, 10F)));
                Paragraph pTitulo2 = new Paragraph(new Phrase(20F, "Nº Pedido __________________________________________________________"
                                                                 + "___", FontFactory.getFont(FontFactory.HELVETICA, 10F)));
                
                pTitulo1.setAlignment(Element.ALIGN_CENTER);
                 pTitulo2.setAlignment(Element.ALIGN_CENTER);
                doc.add(pTitulo);
                
                
                Paragraph espaco = new Paragraph(new Phrase(7F, "  ", FontFactory.getFont(FontFactory.HELVETICA, 7F)));
                espaco.setAlignment(Element.ALIGN_CENTER);

                doc.add(espaco);
                
                doc.add(pTitulo1);
                doc.add(pTitulo2);
               
                
                Paragraph m_data = new Paragraph(new Phrase(7F, "id", FontFactory.getFont(FontFactory.HELVETICA, 5F)));
                Paragraph m_tipo = new Paragraph(new Phrase(7F, "Descrição", FontFactory.getFont(FontFactory.HELVETICA, 5F)));
                Paragraph m_descricao = new Paragraph(new Phrase(7F, "Quantidade", FontFactory.getFont(FontFactory.HELVETICA, 5F)));
                Paragraph m_status = new Paragraph(new Phrase(7F, "Preço", FontFactory.getFont(FontFactory.HELVETICA, 5F)));
                Paragraph m_classificacao = new Paragraph(new Phrase(7F, "Subtotal", FontFactory.getFont(FontFactory.HELVETICA, 5F)));

                PdfPTable tablem = new PdfPTable(4);
                PdfPCell cella = new PdfPCell(new Paragraph(m_data));
                PdfPCell cellb = new PdfPCell(new Paragraph(m_tipo));
                PdfPCell cellc = new PdfPCell(new Paragraph(m_descricao));
                PdfPCell celld = new PdfPCell(new Paragraph(m_status));
                PdfPCell celle = new PdfPCell(new Paragraph(m_classificacao));

                cella.setHorizontalAlignment(Element.ALIGN_CENTER);
                 cella.setBorder(PdfPCell.NO_BORDER);
                cellb.setHorizontalAlignment(Element.ALIGN_CENTER);
                 cellb.setBorder(PdfPCell.NO_BORDER);
                cellc.setHorizontalAlignment(Element.ALIGN_CENTER);
                 cellc.setBorder(PdfPCell.NO_BORDER);
                celld.setHorizontalAlignment(Element.ALIGN_CENTER);
                 celld.setBorder(PdfPCell.NO_BORDER);
                celle.setHorizontalAlignment(Element.ALIGN_CENTER);
                 celle.setBorder(PdfPCell.NO_BORDER);

                tablem.addCell(cellb);
                tablem.addCell(cellc);
                tablem.addCell(celld);
                tablem.addCell(celle);

              
                doc.add(espaco);

                Connection con = new ConnectionFactory().getConnection();
                PreparedStatement ps, ps1 = null;
                ResultSet rs, rs1 = null;

                String query = "select p.descricao, i.qtd, p.preco, i.subtotal from tb_itensvendas as i "
                    + " inner join tb_produtos as p on(i.produto_id = p.id) where i.venda_id = (select max(id) as m from tb_vendas)  ";
                
                 String sql = "select v.id ,  date_format(v.data_venda,'%d/%m/%Y') as data_formatada , c.nome, v.total_venda, v.observacoes  from tb_vendas as v  "
                       + " inner join tb_clientes as c on(v.cliente_id = c.id) where v.id = (select max(id) as m from tb_vendas)";

                ps = con.prepareStatement(query);
                ps1 = con.prepareStatement(sql);
                
                 rs1 = ps1.executeQuery();
                     
                    while (rs1.next()) {
                         Paragraph id1 = new Paragraph(
                        rs1.getString("v.id"), FontFactory.getFont(FontFactory.HELVETICA, 10F));
                    Paragraph id = new Paragraph(
                        rs1.getString("data_formatada"), FontFactory.getFont(FontFactory.HELVETICA, 10F));
                    Paragraph descricao = new Paragraph(
                        rs1.getString("c.nome"), FontFactory.getFont(FontFactory.HELVETICA, 8F));
                    Paragraph preco_compra = new Paragraph(
                        rs1.getString("v.total_venda"), FontFactory.getFont(FontFactory.HELVETICA, 15F));
                    Paragraph preco_venda = new Paragraph(
                        rs1.getString("v.observacoes"), FontFactory.getFont(FontFactory.HELVETICA, 5F));                
                    PdfPTable table1 = new PdfPTable(5);  
                    PdfPCell cell11 = new PdfPCell(new Paragraph(id1));
                    PdfPCell cell1 = new PdfPCell(new Paragraph(id));
                    PdfPCell cell2 = new PdfPCell(new Paragraph(descricao));
                    PdfPCell cell3 = new PdfPCell(new Paragraph(preco_venda));
                    PdfPCell cell4 = new PdfPCell(new Paragraph(preco_compra));
                    cell11.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell1.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell3.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell4.setHorizontalAlignment(Element.ALIGN_CENTER); 
                    cell11.setBorder(PdfPCell.NO_BORDER);
                    cell1.setBorder(PdfPCell.NO_BORDER);
                    cell2.setBorder(PdfPCell.NO_BORDER);
                    cell3.setBorder(PdfPCell.NO_BORDER);
                    cell4.setBorder(PdfPCell.NO_BORDER);
                    table1.addCell(cell11);
                    table1.addCell(cell1);
                    table1.addCell(cell2);
                    table1.addCell(cell3);
                    table1.addCell(cell4);
                  doc.add(table1);
                  doc.add(espaco);
                    }doc.add(tablem);
                  rs = ps.executeQuery();
                
               

                while (rs.next()) {
                    Paragraph id = new Paragraph(
                        rs.getString("p.descricao"), FontFactory.getFont(FontFactory.HELVETICA, 7F));
                    Paragraph descricao = new Paragraph(
                        rs.getString("i.qtd"), FontFactory.getFont(FontFactory.HELVETICA, 5F));
                    Paragraph preco_compra = new Paragraph(
                        rs.getString("p.preco"), FontFactory.getFont(FontFactory.HELVETICA, 5F));
                    Paragraph preco_venda = new Paragraph(
                        rs.getString("i.subtotal"), FontFactory.getFont(FontFactory.HELVETICA, 5F));                
                    PdfPTable table = new PdfPTable(4);  
                    PdfPCell cell1 = new PdfPCell(new Paragraph(id));
                    PdfPCell cell2 = new PdfPCell(new Paragraph(descricao));
                    PdfPCell cell3 = new PdfPCell(new Paragraph(preco_compra));
                    PdfPCell cell4 = new PdfPCell(new Paragraph(preco_venda));
                    cell1.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell3.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cell4.setHorizontalAlignment(Element.ALIGN_CENTER);                  
                    table.addCell(cell1);
                    table.addCell(cell2);
                    table.addCell(cell3);
                    table.addCell(cell4);
                    doc.add(table);

                }
                    
                Runtime.getRuntime().exec(new String[]{"cmd.exe", "/c", "start", "Produtos.pdf"});

                doc.close();

            } catch (IOException | DocumentException | SQLException ex) {
                Logger.getLogger(FrmPagamentos.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FrmPagamentos.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
                Logger.getLogger(FrmPagamentos.class.getName()).log(Level.SEVERE, null, ex);
            }
        
         FrmVendas telav = new FrmVendas();
         telav.setVisible(true);
         this.dispose();
         
         

    }//GEN-LAST:event_btnfinalizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPagamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPagamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPagamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPagamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmPagamentos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnfinalizar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtobs;
    public javax.swing.JTextField txttotal;
    // End of variables declaration//GEN-END:variables
}
